{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "button",
  "type": "registry:ui",
  "title": "Button",
  "author": "Saad",
  "description": "A Simple UI button component",
  "dependencies": [
    "@radix-ui/react-accordion"
  ],
  "files": [
    {
      "path": "src/registry/components/ui/Button.tsx",
      "content": "import * as React from 'react'\r\nimport { Slot } from '@radix-ui/react-slot'\r\nimport { cva, type VariantProps } from 'class-variance-authority'\r\n\r\nimport { cn } from '@/lib/utils'\r\n\r\nconst buttonVariants = cva(\r\n  'flex items-center justify-center gap-2 text-nowrap text-sm rounded-lg transition-colors duration-200 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 shadow-sm cursor-pointer',\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default: 'bg-neutral-950 text-white hover:bg-neutral-950/80 dark:bg-neutral-100 dark:text-black dark:hover:bg-neutral-100/80',\r\n        secondary: 'bg-gray-200 text-black hover:bg-gray-200/80 dark:bg-zinc-800 dark:text-white dark:hover:bg-zinc-800/80',\r\n        destructive: 'bg-red-700 text-white hover:bg-red-700/80',\r\n        outline: 'border border-gray-300 hover:bg-zinc-200 dark:border-neutral-700 dark:hover:bg-zinc-800',\r\n        hidden: 'hover:bg-zinc-200 dark:hover:bg-zinc-800 shadow-none'\r\n      },\r\n      size: {\r\n        default: 'px-5 py-2',\r\n        small: 'px-3 py-1 gap-1.5 text-sm',\r\n        large: 'px-6 py-3',\r\n        icon: 'size-9'\r\n      }\r\n    },\r\n    defaultVariants: {\r\n      variant: 'default',\r\n      size: 'default'\r\n    }\r\n  }\r\n)\r\n\r\n\r\nexport interface ButtonProps\r\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\r\n    VariantProps<typeof buttonVariants> {\r\n  asChild?: boolean\r\n}\r\n\r\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\r\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\r\n    const Comp = asChild ? Slot : \"button\"\r\n    return (\r\n      <Comp\r\n        className={cn(buttonVariants({ variant, size, className }))}\r\n        ref={ref}\r\n        {...props}\r\n      />\r\n    )\r\n  }\r\n)\r\nButton.displayName = 'Button'\r\n\r\nexport { Button, buttonVariants }",
      "type": "registry:ui"
    }
  ]
}